<!--pages/wxml/wxml.wxml-->
<!-- Mustache语法 -->
<view>{{message}}</view>
<view>{{firstname}} {{lastname}}</view>
<view>{{age > 18 ?  '成年人' : '未成年人'}}</view>

<view>{{nowTime}}</view>

<button size="mini" bindtap="bindColor">切换颜色</button>
<view class="box {{isActive ? 'active' : ''}}">哈哈哈</view>
<view>------条件判断--------</view>
<!-- wx:if -->
<button size="mini" bindtap="handleShow">显示内容</button>
<view wx:if="{{isShow}}">哈哈哈</view>
<!-- wx:elif和wx:else -->
<button size="mini" bindtap="handleAdd">分数递增10</button>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>

<!-- hidden属性 -->
<view hidden="{{false}}">哈哈哈</view>

<!-- wx:if和hidden在隐藏组件有什么区别 -->
<!-- 
  区别：
    hidden： 将一个组件隐藏起来，该组件依然存在(display: none)
    wx:if : 将一个组件隐藏起来，该组件根本不存在(压根没有创建)
  选择：
    如果显示和隐藏非常频繁的话，用hidden
    如果显示和隐藏不经常用，用wx:if
 -->
 <view hidden="{{true}}">我是hidden控制的内容</view>
 <view wx:if="{{false}}">我是wx:if控制的内容</view>

 <view>-------列表渲染---------</view>
 <!-- 1.wx:for的回顾 -->
 <!-- 1.1 遍历数组/字符串/数字 -->
 <!-- <view wx:for="{{['abc','cba','cab']}}">{{item}} {{index}}</view>
 <view wx:for="chenjiemin">{{item}} {{index}}</view>
 <view wx:for="{{9}}">{{item}}</view> -->

<!-- 2.block标签 -->
<!-- block知识一个标签，不会损耗性能-->
<!-- <block wx:if="{{true}}">
  <button>按钮</button>
  <view>哈哈</view>
</block>

<block wx:for="{{3}}">
  <button>按钮</button>
  <view>呵呵</view>
</block> -->

<!-- 3.item/index的别名 -->
<!-- <view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}} {{i}}</view>
<text>二维数组的遍历</text> 
<block wx:for="{{nums}}" wx:for-item="num">
  <block wx:for="{{num}}">
    <view>{{item}}</view>
  </block>
</block> -->
<!-- 4.key的作用 -->
<!-- 提升性能 -->
<!-- <view class="container">
  <view wx:for="{{letters}}" wx:key="{{item}}">{{item}}</view>
</view> -->

<view>-----------template-----------</view>
<!-- 
  之前的时候小程序不支持自定义的组件，为了代码的复用： template
 -->
 <!-- 模板中包裹的内容，在没有被使用前，是不会渲染的 -->
 <!-- <template name="contentItem">
  <button size="mini">{{btn}}</button>
  <view>{{content}}</view>
 </template>

 <template is="contentItem" data="{{btn: '按钮'，content： '哈哈哈'}}"/> -->